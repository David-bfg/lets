{"metadata":{},"options":{"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/alexandesigner/Documents/projects/lets/boilerplate/src/imports/ui/pages/Admin/Images/ImagesNew.vue","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions",["flow",{}],"nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","objectRestSpread",["flow",{}]],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"sourceFileName":"/Users/alexandesigner/Documents/projects/lets/boilerplate/src/imports/ui/pages/Admin/Images/ImagesNew.vue","filename":"/Users/alexandesigner/Documents/projects/lets/boilerplate/src/imports/ui/pages/Admin/Images/ImagesNew.vue","passPerPreset":false,"envName":"development","cwd":"/Users/alexandesigner/Documents/projects/lets/boilerplate","root":"/Users/alexandesigner/Documents/projects/lets/boilerplate","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":true,"enforceStrictMode":false,"dynamicImport":true}},{"key":"transform-runtime","visitor":{"CallExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"MemberExpression":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true,"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"version":"7.7.4","helpers":true,"useESModules":false,"corejs":false}},{"key":"syntax-flow","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-nullish-coalescing-operator","visitor":{"_exploded":{},"_verified":{},"LogicalExpression":{"enter":[null]}},"options":{}},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-chaining","visitor":{"_exploded":{},"_verified":{},"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]}},"options":{}},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-catch-binding","visitor":{"_exploded":{},"_verified":{},"CatchClause":{"enter":[null]}},"options":{}},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]}},"options":{}},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-arrow-functions","visitor":{"ArrowFunctionExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-block-scoped-functions","visitor":{"BlockStatement":{"enter":[null]},"SwitchCase":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-block-scoping","visitor":{"VariableDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"_exploded":true,"BlockStatement":{"enter":[null]},"SwitchStatement":{"enter":[null]},"Program":{"enter":[null]},"_verified":true,"DoWhileStatement":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForStatement":{"enter":[null]},"WhileStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-classes","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-computed-properties","visitor":{"ObjectExpression":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-destructuring","visitor":{"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"VariableDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-for-of","visitor":{"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-object-super","visitor":{"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{}},{"key":"transform-shorthand-properties","visitor":{"ObjectMethod":{"enter":[null]},"ObjectProperty":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-spread","visitor":{"ArrayExpression":{"enter":[null]},"CallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-sticky-regex","visitor":{"RegExpLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-typeof-symbol","visitor":{"UnaryExpression":{"enter":[null]},"_exploded":true,"_verified":true,"BlockStatement":{"enter":[null]},"CatchClause":{"enter":[null]},"DoWhileStatement":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForStatement":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"Program":{"enter":[null]},"ObjectMethod":{"enter":[null]},"SwitchStatement":{"enter":[null]},"WhileStatement":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"ForOfStatement":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"TSModuleBlock":{"enter":[null]}},"options":{}},{"key":"transform-unicode-regex","visitor":{"RegExpLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-property-literals","visitor":{"ObjectProperty":{"exit":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-flow-strip-types","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]},"ImportDeclaration":{"enter":[null,null]},"ClassProperty":{"enter":[null]},"ClassPrivateProperty":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"TypeCastExpression":{"enter":[null,null]},"CallExpression":{"enter":[null]},"OptionalCallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"ImportSpecifier":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"AnyTypeAnnotation":{"enter":[null]},"ArrayTypeAnnotation":{"enter":[null]},"BooleanTypeAnnotation":{"enter":[null]},"BooleanLiteralTypeAnnotation":{"enter":[null]},"NullLiteralTypeAnnotation":{"enter":[null]},"ClassImplements":{"enter":[null]},"DeclareClass":{"enter":[null]},"DeclareFunction":{"enter":[null]},"DeclareInterface":{"enter":[null]},"DeclareModule":{"enter":[null]},"DeclareModuleExports":{"enter":[null]},"DeclareTypeAlias":{"enter":[null]},"DeclareOpaqueType":{"enter":[null]},"DeclareVariable":{"enter":[null]},"DeclareExportDeclaration":{"enter":[null]},"DeclareExportAllDeclaration":{"enter":[null]},"DeclaredPredicate":{"enter":[null]},"ExistsTypeAnnotation":{"enter":[null]},"FunctionTypeAnnotation":{"enter":[null]},"FunctionTypeParam":{"enter":[null]},"GenericTypeAnnotation":{"enter":[null]},"InferredPredicate":{"enter":[null]},"InterfaceExtends":{"enter":[null]},"InterfaceDeclaration":{"enter":[null]},"InterfaceTypeAnnotation":{"enter":[null]},"IntersectionTypeAnnotation":{"enter":[null]},"MixedTypeAnnotation":{"enter":[null]},"EmptyTypeAnnotation":{"enter":[null]},"NullableTypeAnnotation":{"enter":[null]},"NumberLiteralTypeAnnotation":{"enter":[null]},"NumberTypeAnnotation":{"enter":[null]},"ObjectTypeAnnotation":{"enter":[null]},"ObjectTypeInternalSlot":{"enter":[null]},"ObjectTypeCallProperty":{"enter":[null]},"ObjectTypeIndexer":{"enter":[null]},"ObjectTypeProperty":{"enter":[null]},"ObjectTypeSpreadProperty":{"enter":[null]},"OpaqueType":{"enter":[null]},"QualifiedTypeIdentifier":{"enter":[null]},"StringLiteralTypeAnnotation":{"enter":[null]},"StringTypeAnnotation":{"enter":[null]},"ThisTypeAnnotation":{"enter":[null]},"TupleTypeAnnotation":{"enter":[null]},"TypeofTypeAnnotation":{"enter":[null]},"TypeAlias":{"enter":[null]},"TypeAnnotation":{"enter":[null]},"TypeParameter":{"enter":[null]},"TypeParameterDeclaration":{"enter":[null]},"TypeParameterInstantiation":{"enter":[null]},"UnionTypeAnnotation":{"enter":[null]},"Variance":{"enter":[null]},"VoidTypeAnnotation":{"enter":[null]},"ExportAllDeclaration":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]}},"options":{}},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"regenerator-transform","visitor":{"_exploded":true,"_verified":true,"ObjectMethod":{"enter":[null],"exit":[null]},"ClassMethod":{"enter":[null],"exit":[null]},"ClassPrivateMethod":{"enter":[null],"exit":[null]},"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]}},"options":{}}],"presets":[],"generatorOpts":{"filename":"/Users/alexandesigner/Documents/projects/lets/boilerplate/src/imports/ui/pages/Admin/Images/ImagesNew.vue","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"/Users/alexandesigner/Documents/projects/lets/boilerplate/src/imports/ui/pages/Admin/Images/ImagesNew.vue"}},"code":"var AdminSidebar;\nmodule.link(\"../../../components/Admin/AdminSidebar.vue\", {\n  \"default\": function (v) {\n    AdminSidebar = v;\n  }\n}, 0);\nvar AdminContent;\nmodule.link(\"../../../components/Admin/AdminContent.vue\", {\n  \"default\": function (v) {\n    AdminContent = v;\n  }\n}, 1);\nvar BackButton;\nmodule.link(\"../../../components/BackButton/BackButton.vue\", {\n  \"default\": function (v) {\n    BackButton = v;\n  }\n}, 2);\nvar Images;\nmodule.link(\"../../../../api/Images/images\", {\n  \"default\": function (v) {\n    Images = v;\n  }\n}, 3);\nmodule.exportDefault({\n  name: 'admin-images-new',\n  data: function () {\n    return {\n      imageUrl: null,\n      imageFileUpload: '',\n      image: [],\n      newImage: {\n        image: {\n          name: '',\n          type: '',\n          extension: '',\n          path: '',\n          imageId: ''\n        }\n      }\n    };\n  },\n  computed: {\n    baseUrl: function () {\n      return Meteor.settings.public.BASE_URL;\n    }\n  },\n  methods: {\n    // Form submit\n    handleSubmitForm: function () {\n      var self = this;\n      var dataForm = self.newImage;\n      var user = self.users[0];\n\n      if (self.imageUrl !== null) {\n        // Create upload instance\n        var uploadInstance = Images.insert({\n          file: self.imageFileUpload.raw,\n          // Get the raw file\n          streams: 'dynamic',\n          chunkSize: 'dynamic',\n          fileName: self.imageFileUpload.name\n        }, false); // When upload status 'end' \n\n        uploadInstance.on('end', function (error, fileObj) {\n          // Check image upload\n          if (error) {\n            console.log('Error during upload: ' + error.reason);\n          } else {\n            // Get image path\n            var imagePath = Images.link(fileObj);\n            self.image = {\n              name: fileObj.name,\n              type: 'document',\n              extension: fileObj.extension,\n              path: imagePath,\n              imageId: fileObj._id\n            };\n          }\n\n          self.$message({\n            type: 'info',\n            message: \"Image created with success!\"\n          });\n          self.$router.push({\n            name: 'admin-images'\n          });\n        });\n        uploadInstance.start();\n      }\n    },\n    handleImageSuccess: function (res, file) {\n      this.imageFileUpload = file;\n      this.imageUrl = URL.createObjectURL(file.raw);\n    },\n    beforeImageUpload: function (file) {\n      var isJPG = file.type === 'image/jpeg';\n      var isPNG = file.type === 'image/png';\n      var isLt2M = file.size / 1024 / 1024 < 2;\n\n      if (!isJPG && !isPNG) {\n        this.$message.error('Image must be JPG or PNG format!');\n      }\n\n      if (!isLt2M) {\n        this.$message.error('Image size can not exceed 2MB!');\n      }\n\n      return isJPG || isPNG && isLt2M;\n    }\n  },\n  meteor: {\n    $subscribe: {\n      'users': []\n    },\n    users: function () {\n      return Meteor.users.find({});\n    }\n  },\n  components: {\n    AdminSidebar: AdminSidebar,\n    AdminContent: AdminContent,\n    BackButton: BackButton\n  }\n});","map":{"version":3,"sources":["/Users/alexandesigner/Documents/projects/lets/boilerplate/src/imports/ui/pages/Admin/Images/ImagesNew.vue"],"names":["AdminSidebar","module","link","v","AdminContent","BackButton","Images","exportDefault","name","data","imageUrl","imageFileUpload","image","newImage","type","extension","path","imageId","computed","baseUrl","Meteor","settings","public","BASE_URL","methods","handleSubmitForm","self","dataForm","user","users","uploadInstance","insert","file","raw","streams","chunkSize","fileName","on","error","fileObj","console","log","reason","imagePath","_id","$message","message","$router","push","start","handleImageSuccess","res","URL","createObjectURL","beforeImageUpload","isJPG","isPNG","isLt2M","size","meteor","$subscribe","find","components"],"mappings":"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","sourcesContent":["\n\n// Components\nimport AdminSidebar from '../../../components/Admin/AdminSidebar.vue';\nimport AdminContent from '../../../components/Admin/AdminContent.vue';\nimport BackButton from '../../../components/BackButton/BackButton.vue';\n\n// Collections\nimport Images from '../../../../api/Images/images'\n\nexport default {\n  name: 'admin-images-new',\n  data: () => ({\n    imageUrl: null,\n    imageFileUpload: '',\n    image: [],\n    newImage: {\n      image: {\n        name: '',\n        type: '',\n        extension: '',\n        path: '',\n        imageId: ''\n      }\n    }\n  }),\n  computed: {\n    baseUrl () {\n      return Meteor.settings.public.BASE_URL\n    }\n  },\n  methods: {\n    // Form submit\n    handleSubmitForm () {\n      let self = this\n      let dataForm = self.newImage\n      let user = self.users[0]\n      if (self.imageUrl !== null) {\n        // Create upload instance\n        let uploadInstance = Images.insert({\n          file: self.imageFileUpload.raw, // Get the raw file\n          streams: 'dynamic',\n          chunkSize: 'dynamic',\n          fileName: self.imageFileUpload.name\n        }, false)\n        // When upload status 'end' \n        uploadInstance.on('end', function(error, fileObj) {\n          // Check image upload\n          if (error) {\n            console.log('Error during upload: ' + error.reason)\n          } else {\n            // Get image path\n            let imagePath = Images.link(fileObj)\n            self.image = {\n              name: fileObj.name,\n              type: 'document',\n              extension: fileObj.extension,\n              path: imagePath,\n              imageId: fileObj._id\n            }\n          }\n          self.$message({\n            type: 'info',\n            message: `Image created with success!`\n          })\n          self.$router.push({ name: 'admin-images' })\n        })\n        uploadInstance.start()\n      }\n    },\n    handleImageSuccess(res, file) {\n      this.imageFileUpload = file\n      this.imageUrl = URL.createObjectURL(file.raw)\n    },\n    beforeImageUpload(file) {\n      const isJPG = file.type === 'image/jpeg'\n      const isPNG = file.type === 'image/png'\n      const isLt2M = file.size / 1024 / 1024 < 2\n      if (!isJPG && !isPNG) {\n        this.$message.error('Image must be JPG or PNG format!')\n      }\n      if (!isLt2M) {\n        this.$message.error('Image size can not exceed 2MB!')\n      }\n      return isJPG || isPNG && isLt2M\n    }\n  },\n  meteor: {\n    $subscribe: {\n      'users': [],\n    },\n    users() {\n      return Meteor.users.find({})\n    },\n  },\n  components: {\n    AdminSidebar,\n    AdminContent,\n    BackButton\n  }\n}\n"]},"sourceType":"module","hash":"76489d34a40bbc385396dc7ea88c9de74e8f40a4"}
